#!/bin/bash

# tmux-cmd: compilation of tmux scripts

[ ! "$(command -V "tmux")" ] && exit 1
[ ! "$(command -V "fzf")" ] && exit 1

TMUX_RUNNING=$(pgrep tmux)

# paths that would be sessionize by default
PROJECT_DIR=(
    "$HOME/Programming/repositories"
    "$HOME/Programming/work_in_progress"
    "$HOME/Programming/godot"
)

# prints the error message
error()
{
    printf "%s\n" "$1" >&2
    [ -n "$TMUX_RUNNING" ] && tmux display-message "$1" >&2
    exit 1
}

# checks if project is a godot project
is_godot_project()
{
    path="$1"

    if [ -f "$path/project.godot" ]; then
        return 0
    else
        return 1
    fi
}

# checks if a program is installed
is_installed()
{
    program="$1"

    if [ "$(command -V "$program")" ]; then
        return 0
    else
        return 1
    fi
}

session_is_attached()
{
    session_name="$1"

    if ! tmux has-session -t="$session_name" 2> /dev/null; then
        error "No session named '$session_name'"
    fi

    session_status="$(tmux list-sessions -F "#{session_name} #{session_attached}" | \
        grep -w -v "$1" | cut -d " " -f2)"

    if [ "$session_status" -eq 1 ]; then
        return 0
    else
        return 1
    fi
}

# creates a window
create_new_window()
{
    session_name="$1"
    window_name="$2"
    cmd="$3"
    path="$4"

    [ -z "$path" ] || [ ! -d "$path" ] && path="$HOME"

    tmux new-window -t "$session_name" -c "$path" 
    tmux rename-window -t "$session_name" "$window_name"
    [ -n "$cmd" ] && tmux send-keys -t "$session_name" "$cmd" C-m
}

# setups the window layouts
create_workspace()
{
    session_name="$1"
    path="$2"

    main_window="1"

    neovim="nvim"
    neovim_godot="$neovim --listen ./godothost ."
    
    tmux rename-window -t "$session_name" "ED"

    if is_godot_project "$path"; then
        tmux send-keys -t "$session_name" "$neovim_godot" C-m
        tmux display-message \
            "Godot project detected... listening to 'godothost' server..."
    else
        tmux send-keys -t "$session_name" "$neovim" C-m
    fi

    create_new_window "$session_name" "TERM" "" "$path"
    tmux select-window -t "$session_name:$main_window"
}

# starting session
tmux_start()
{
    session_name="MAIN"
    path="$HOME"
    
    win_1_title="TASK"
    win_1_cmd="calcurse"

    win_2_title="FILE"
    win_2_cmd="ranger"

    win_3_title="MUSIC"
    win_3_cmd="cmus"

    if ! tmux has-session -t="$session_name" 2> /dev/null; then
        # the first window is path when finished
        sel_window="1"
        
        # create the session
        tmux new-session -ds "$session_name" -c "$HOME"
        
        # create the windows

        # window 1
        if is_installed "$win_1_cmd"; then
            tmux rename-window -t "$session_name" "$win_1_title"
            tmux send-keys -t "$session_name" "$win_1_cmd" C-m
        fi

        # window 2
        is_installed "$win_2_cmd" && \
            create_new_window "$session_name" "$win_2_title" "$win_2_cmd"

        # window 3
        is_installed "$win_3_cmd" && \
            create_new_window "$session_name" "$win_3_title" "$win_3_cmd"
        
        # go back to the first window
        tmux select-window -t "$session_name:$sel_window"
        tmux attach-session -t "$session_name"

    else
        tmux switch-client -t "$session_name"
    fi
}

# go to a selected session than kill the previous focused session
switch_n_kill()
{
    [ -z "$TMUX" ] && [ -z "$TMUX_RUNNING" ] && error "Tmux is not running"

    last_active_session="$(tmux list-sessions -F "#{session_activity} #{session_name}" | \
        sort -n | tail -n 1 | cut -d " " -f2-)"

    switch_target="$(tmux list-sessions | \
        grep -w -v "$last_active_session" | fzf | cut -d ":" -f1)"

    session_is_attached "$switch_target" && tmux detach -s "$switch_target"

    tmux switch-client -t "$switch_target"
    tmux kill-session -t "$last_active_session"
}

# creates sessions
sessionize()
{
    case "$1" in
        # sessionize a specified directory
	    -target) 
            [ ! -d "$2" ] && error "Target '$2' is not a directory"
            path="$2"
        ;;

        # sessionize the current working directory
        -cwd) path="$(find -L "$(pwd)" -mindepth 1 -maxdepth 2 -type d | fzf)" ;;

        # sessionize a directory from the PROJECT_DIR
        *) path="$(find -L "${PROJECT_DIR[@]}" -mindepth 1 -maxdepth 1 -type d | fzf)";;
    esac

    [ -z "$path" ] || [ ! -d "$path" ] &&  error "invalid selection '$path'"

    session_name=$(basename "$path" | tr . _)

    if [ -z "$TMUX" ] && [ -z "$TMUX_RUNNING" ]; then
        tmux new-session -s "$session_name" -c "$path"
        exit 0
    fi

    if ! tmux has-session -t="$session_name" 2> /dev/null; then
        tmux new-session -d -s "$session_name" -c "$path"
        create_workspace "$session_name" "$path"
    fi

    tmux switch-client -t "$session_name" \
        || tmux attach-session -t "$session_name"
}

case "$1" in
    -start) tmux_start ;;
    -switch_n_kill) switch_n_kill;;
	-sessionize-target) sessionize -target "$2" ;;
	-sessionize-cwd) sessionize -cwd ;;
    -sessionize-project) sessionize;;
esac
