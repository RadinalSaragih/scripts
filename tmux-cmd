#!/bin/bash
TMUX_RUNNING=$(pgrep tmux)

error()
{
    printf "%s\n" "$1" 2>/dev/null
    exit 1
}

# creates a window
new_window()
{
    session_name="$1"
    window_name="$2"
    cmd="$3"

    tmux new-window -t "$session_name" 
    tmux rename-window -t "$session_name" "$window_name"
    tmux send-keys -t "$session_name" "$cmd" C-m
}

# setups the window layouts
create_workspace()
{
    session_name="$1"
    sel_window="1"

    tmux rename-window -t "$session_name" "ED"
    tmux send-keys -t "$session_name" "nvim" C-m

    # new_window "$session_name" "FM" "ranger"

    tmux new-window -t "$session_name"
    tmux rename-window -t "$session_name" "TERM"

    tmux select-window -t "$session_name:$sel_window"
}

# starting session
tmux_start()
{
    session_name="MAIN"

    if ! tmux has-session -t="$session_name" 2> /dev/null; then
        sel_window="1"

        tmux new-session -ds "$session_name" -c "$HOME"

        tmux rename-window -t "$session_name" "TASK"
        tmux send-keys -t "$session_name" "calcurse" C-m

        new_window "$session_name" "FILE" "ranger"
        new_window "$session_name" "MUSIC" "cmus"

        tmux select-window -t "$session_name:$sel_window"
    fi

    tmux switch-client -t "$selected_name" \
        || tmux attach-session -t "$selected_name"
}

# switch to a selected session and kill the previous session
switch_and_kill()
{
    [ -z "$TMUX" ] && [ -z "$TMUX_RUNNING" ] && error "Tmux is not running"

    last_active_session="$(tmux list-sessions -F "#{session_activity} #{session_name}" | \
        sort -n | tail -n 1 | cut -d " " -f2-)"

    session_target="$(tmux list-sessions | \
        grep -w -v "$last_active_session" | fzf | cut -d ":" -f1)"

    target_is_attached="$(tmux list-sessions -F "#{session_name}:#{session_attached}" | \
        grep -w -v "$session_target" | cut -d ":" -f2)"

    [ "$target_is_attached" -eq 1 ] && tmux detach -s "$session_target"

    tmux switch-client -t "$session_target"
    tmux kill-session -t "$last_active_session"
}

# creates sessions
sessionize()
{
    PROJECT_DIR=(
        "$HOME/Programming/repositories"
        "$HOME/Programming/work_in_progress"
    )

    case "$1" in
        # sessionize a specified directory
	    -target) 
            [ ! -d "$2" ] && error "Target '$2' is not a directory"
            selected="$2"
        ;;

        # sessionize the current working directory
        -cwd) selected="$(find -L "$(pwd)" -mindepth 1 -maxdepth 2 -type d | fzf)" ;;

        # sessionize a directory from the PROJECT_DIR
        -project) selected="$(find -L "${PROJECT_DIR[@]}" -mindepth 1 -maxdepth 1 -type d | fzf)";;
    esac

    [ -z "$selected" ] || [ ! -d "$selected" ] &&  error "invalid selection '$selected'"

    selected_name=$(basename "$selected" | tr . _)

    if [ -z "$TMUX" ] && [ -z "$TMUX_RUNNING" ]; then
        tmux new-session -s "$selected_name" -c "$selected"
        exit 0
    fi

    if ! tmux has-session -t="$selected_name" 2> /dev/null; then
        tmux new-session -ds "$selected_name" -c "$selected"
        create_workspace "$selected_name"
    fi

    tmux switch-client -t "$selected_name" \
        || tmux attach-session -t "$selected_name"
}

case "$1" in
    -start) tmux_start ;;

    -switch_n_kill) switch_and_kill ;;

	-sessionize-target) sessionize -target "$2" ;;
	-sessionize-cwd) sessionize -cwd ;;
    -sessionize-project) sessionize -project ;;
esac
