#!/bin/env bash

STARTUP_WINDOWS=(
    "calcurse"
    "ranger"
    "cmus"
)

is_installed()
{
    [ "$(command -V "$1")" ] && return 0 || return 1
}

# check if path is valid
path_is_valid()
{
    [ -n "$1" ] && [ -d "$1" ] && return 0 || return 1
}

# creates a window
# also runs a command in the window if specified
create_new_window()
{
    local session_name="$1"
    local cmd="$2"
    local path="$3"

    # path is invalid, use $HOME
    ! path_is_valid "$path" && path="$HOME"

    tmux new-window -t "$session_name" -c "$path"

    # make an empty window if no command is defined
    [ -n "$cmd" ] && tmux send-keys -t "$session_name" "$cmd" C-m
}

tmux_start()
{
    local session_name="MAIN"
    local path="$HOME"

    if ! tmux has-session -t="$session_name" 2> /dev/null; then
        # the first window is path when finished

        # create the session
        tmux new-session -ds "$session_name" -c "$HOME"

        # create the windows
        for index in "${!STARTUP_WINDOWS[@]}"; do
            local cmd="${STARTUP_WINDOWS[$index]}"

            if is_installed "$cmd"; then
                if [ "$index" -eq 0 ]; then 
                    tmux send-keys -t "$session_name" "$cmd" C-m
                else
                    create_new_window "$session_name" "$cmd"
                fi
            fi
        done

        # go back to the first window
        tmux select-window -t "$session_name:1"
    else
        tmux detach -s "$session_name"
    fi

    tmux attach-session -t "$session_name"
}

if [ $(tmux list-session | wc -l) -gt 1 ]; then
    tmux attach
else
    tmux_start
fi
